---
title: "Linear regression with multiple predictors"
subtitle: "Lecture 5 - part A"
date: "February 24, 2025"
format: 
  revealjs:
    footer: "[https://bovi-analytics.github.io/BeastsAndBytes/](https://bovi-analytics.github.io/BeastsAndBytes/)"
---

#Introduction

## Goals

-   Recap on modeling with one predictor
-   Modeling with two predictors
-   Interpreting slopes and intercepts
-   Interpreting interactions

## Setup

```{r}
#| label: load-pkg
#| echo: true

library(dplyr)
library(tidyverse)
library(tidymodels)
library(jtools)
library(sjPlot)
library(sjmisc)
ggplot2::theme_set(theme_gray(base_size = 16))
```

# Linear regression with a single predictor

## Simple linear regression {.smaller}

Use **simple linear regression** to model the relationship between a quantitative outcome ($Y$) and a single quantitative predictor ($X$): $$\Large{Y = \beta_0 + \beta_1 X + \epsilon}$$

::: incremental
-   $\beta_1$: True slope of the relationship between $X$ and $Y$
-   $\beta_0$: True intercept of the relationship between $X$ and $Y$
-   $\epsilon$: Error (residual)
:::

## Interpreting slope & intercept

$$\widehat{\text{Total number of cows}} = -16.1 + 0.008785434    \times \text{Year}$$

::: incremental
-   **Slope:** For every one point increase in `Year`, we expect the total number of cows to be higher by 0.008785434 points, on average.
-   **Intercept:** In `Year` is 0, we expect the total number of cows to be -16.1.
:::

# Linear regression with a multiple predictors

## Read the data

```{r data-read}
#| echo: true

df_raw_cattle_numbers <- read.csv('https://raw.githubusercontent.com/Bovi-analytics/minor-digital-agriculture/refs/heads/main/data/fao-cattle-numbers.csv')
```

## Data prep

-   Select columns `Year`, `Area` and `Value`
-   Apply correct FAIR naming convention
-   Mutate NumberOfCows to be easier to interpret
-   Filter specific countries

```{r data-prep-1}
#| echo: true

df_cattle_numbers <- df_raw_cattle_numbers %>%
  dplyr::rename(
    Country = Area,
    NumberOfCows = Value
  )  %>%
  dplyr::mutate(
    NumberOfCows =  NumberOfCows/1000000
  ) %>%
  dplyr::select(Year, Country, NumberOfCows) %>%
  dplyr::filter(
    Country %in% c("Brazil", "United States of America", "India")
  )
```

## Data overview

```{r data-overview}
#| echo: true

df_cattle_numbers %>%
  select(Year, Country, NumberOfCows)
```

## Data visualization

```{r}
#| echo: false

ggplot(df_cattle_numbers, 
       aes(x = Year, y = NumberOfCows, group = Country, color = Country)) +
  geom_line(siz = 2) + 
  labs(
    x = "Year" , 
    y = "Number of Cows (M)"
  )
```

## Regression model {#regression-model-1}

::: columns
```{r}
#| echo: true
#| message: false

m <- lm(NumberOfCows ~ Year + Country, data = df_cattle_numbers)
```
:::

## Multiple linear regression {.smaller}

Use **multiple linear regression** to model the relationship between a quantitative outcome ($Y$) and a multiple quantitative predictors and factors ($X$): $$\Large{Y = \beta_0 + \beta_1 X_1 + \beta_2 X_2 + \epsilon}$$

::: incremental
-   $\beta_1$: True slope of the relationship between $X_1$ and $Y$
-   $\beta_2$: True slope of the relationship between $X_2$ and $Y$
-   $\beta_0$: True intercept of the relationship between $X$ and $Y$
-   $\epsilon$: Error (residual)
:::

## Multiple linear regression

```{r}
#| echo: true
cows_fit <- linear_reg() |>
  fit(NumberOfCows ~ Year + Country, data = df_cattle_numbers)

tidy(cows_fit)
```

## Is the intercept meaningful?

âœ… The intercept is meaningful in context of the data if

-   the predictor can feasibly take values equal to or near zero or
-   the predictor has values near zero in the observed data

ðŸ›‘ Otherwise, in this case not meaningful & difficult to interpret!

## Make intercept more interpretable

-   Substract the initial value of year `1960` from each year value

-   How do you interpret the intercept of 116 now?

-   Did the slope for `Year` or `Country` change

```{r}
#| echo: true
cows_fit <- linear_reg() |>
  fit(
    NumberOfCows ~ Year + Country, 
    data = df_cattle_numbers %>% dplyr::mutate(Year = Year - 1960))
tidy(cows_fit)
```

## Plot the slope effect of County

The estimate for India and USA was +42M and -44M

```{r}
effect_plot(
  lm(NumberOfCows ~ Year + Country, data = df_cattle_numbers),
  pred = Country, 
  interval = TRUE, 
  plot.points = TRUE, 
  jitter = 0.05)
```

## Plot the slope effect of Year

How do you interpret the slope of 0.97, combined with this graph?

```{r}
effect_plot(
  lm(NumberOfCows ~ Year + Country, data = df_cattle_numbers),
  pred = Year, 
  interval = TRUE, 
  plot.points = TRUE, 
  jitter = 0.05)
```

# Linear regression with interaction

## Code to introduce an interaction between predictors

Use `*` to make an interaction term

-   Year \* Country or

-   Year + Country + Year:Country

```{r}
summ(model <-lm(NumberOfCows ~ Year * Country, data = df_cattle_numbers %>% dplyr::mutate(Year = Year - 1960)))
```

## Lets plot the interaction

```{r}
plot_model(model, type = "pred", terms = c("Year", "Country"))

```
